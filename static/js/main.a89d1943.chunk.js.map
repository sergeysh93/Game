{"version":3,"sources":["components/Nav/Nav.js","containers/Nav/Nav.js","components/Sector/Sector.js","containers/Sector/Sector.js","components/Board/Board.js","containers/Board/Board.js","components/Timer/Timer.js","containers/Timer/Timer.js","Consts.js","components/Content/Content.js","containers/Content/Content.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","Fragment","className","curCategory","id","onClick","handleStart","handleCategoryClick","NavContainer","state","_this","bind","Object","assertThisInitialized","this","startGame","level","e","cat","target","setState","changeCategory","components_Nav_Nav","React","Component","colors","0","1","2","3","4","Sector","style","backgroundColor","color","width","size","height","handleClick","onContextMenu","SectorContainer","clickHandler","nextProps","orient","nativeEvent","which","x","y","preventDefault","components_Sector_Sector","Board","board","toRender","i","j","push","containers_Sector_Sector","key","dirs","generateBoard","newBoard","Array","checkBoard","Math","floor","random","recolorPoint","gx","gy","positive","length","BoardContainer","locked","startTime","inProgress","finishGame","toConsumableArray","components_Board_Board","Timer","t","timer","formattedTime","h","m","s","ms","TimerContainer","time","curTimer","Date","now","start","_this2","timerID","setInterval","tick","clearInterval","startTimer","nextState","stopTimer","components_Timer_Timer","DEFAULT_SIZE","DEFAULT_COLORS","Content","ruleTextEng","inputs","onChange","handleLevelChange","type","name","value","title","min","max","step","leaderboard","ContentContainer","parseInt","isNaN","changeLevel","components_Content_Content","App","console","log","containers_Nav_Nav","containers_Timer_Timer","containers_Board_Board","containers_Content_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a89d1943.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport './Nav.css';\n\nconst Nav = (props) => {\n  return (\n    <>\n      <div className='container'>\n        <ul className='nav nav-list'>\n          <li className={'col-6 col-md-3 nav-item'+ (props.curCategory === 'nav0' ? ' active' : '')} id='nav0' onClick={props.handleStart}>New game</li>\n          <li className={'col-6 col-md-3 nav-item'+ (props.curCategory === 'nav1' ? ' active' : '')} id='nav1' onClick={props.handleCategoryClick}>Leaderboard</li>\n          <li className={'col-6 col-md-3 nav-item'+ (props.curCategory === 'nav2' ? ' active' : '')} id='nav2' onClick={props.handleCategoryClick}>Rules</li>\n          <li className={'col-6 col-md-3 nav-item'+ (props.curCategory === 'nav3' ? ' active' : '')} id='nav3' onClick={props.handleCategoryClick}>Difficulty</li>\n        </ul>\n      </div>\n    </>\n  )\n}\n\nNav.propTypes = {\n  handleCategoryClick: PropTypes.func.isRequired,\n  handleStart: PropTypes.func.isRequired,\n  curCategory: PropTypes.string.isRequired\n}\n\nexport default Nav","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Nav from '../../components/Nav/Nav'\n\nclass NavContainer extends React.Component {\n  state = {\n    // leaderboard, rules, diff\n    curCategory: 'nav2'\n  }\n  handleStart = this.handleStart.bind(this)\n  handleCategoryClick = this.handleCategoryClick.bind(this)\n  \n  getLeaderboard(){\n\n  }\n  updateLeaderboard(){\n\n  }\n  handleStart(){\n    this.props.startGame(this.props.level)\n  }\n  handleCategoryClick(e){\n    const cat = this.state.curCategory === e.target.id ? '' : e.target.id\n    this.setState({\n      curCategory: cat\n    })\n    this.props.changeCategory(cat)\n  }\n  render(){\n    return <Nav \n      handleCategoryClick={this.handleCategoryClick}\n      handleStart={this.handleStart}\n      level={this.props.level}\n      curCategory={this.state.curCategory}\n    />\n  }\n}\n\nNavContainer.propTypes = {\n  startGame: PropTypes.func.isRequired,\n  changeCategory: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  curCategory: PropTypes.string.isRequired\n}\n\nexport default NavContainer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Sector.css'\n/*\norient:0\n\n**0**\n**0**\n00000\n**0**\n**0**\n\norient:1\n\n0***0\n*0*0*\n**0**\n*0*0*\n0***0\n\n*/\n\nconst colors = {\n  0: '#A43D94',\n  1: '#717DD7',\n  2: '#00B945',\n  3: 'blue',\n  4: 'purple'\n}\n\n\nconst Sector = (props) => {\n    const style = {\n      backgroundColor: colors[props.color],\n      width: (100/props.size)+'%',\n      height: (100/props.size)+'%'\n    }\n    return (\n    <div className='sector'onClick={props.handleClick} onContextMenu={props.handleClick} style={style}></div>\n  )\n}\n\nSector.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  color: PropTypes.number.isRequired,\n  orient: PropTypes.number.isRequired,\n  size: PropTypes.number.isRequired\n}\n\nexport default Sector","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Sector from '../../components/Sector/Sector'\n\nclass SectorContainer extends React.Component {\n\n  clickHandler = this.clickHandler.bind(this);\n\n  shouldComponentUpdate(nextProps){\n    return (this.props.color !== nextProps.color ||\n      this.props.orient !== nextProps.orient ||\n      this.props.size !== nextProps.size\n      )\n  }\n  clickHandler(e){\n    if (e.nativeEvent.which === 1) {\n      this.props.handleClick(this.props.x, this.props.y, true)\n    } else if (e.nativeEvent.which === 3) {\n      this.props.handleClick(this.props.x, this.props.y, false)\n    }\n    e.preventDefault()\n  }\n  render(){\n    return <Sector \n      handleClick={this.clickHandler}\n      color={this.props.color}\n      orient={this.props.orient}\n      size={this.props.size}\n    />\n  }\n}\n\nSectorContainer.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  color: PropTypes.number.isRequired,\n  orient: PropTypes.number.isRequired,\n  size: PropTypes.number.isRequired\n}\nexport default SectorContainer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SectorContainer from '../../containers/Sector/Sector'\n\nimport './Board.css'\nconst Board = (props) => {\n    const {size, board} = props\n    var toRender = [];\n    for (let i = 0; i < size; i++){\n      for (let j = 0; j < size; j++){\n        toRender.push(\n        <SectorContainer \n          key={i*size+j}\n          handleClick={props.handleClick}\n          x={i}\n          y={j}\n          color={board[i][j].color}\n          orient={board[i][j].orient}\n          size={size}\n        />\n        )\n      }\n    }\n\n    return (\n      <div className='board-container col-md-4 col-sm-12'>\n        <div className='board'>\n          {toRender}\n        </div>\n      </div>\n  )\n}\nBoard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  board: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        color: PropTypes.number.isRequired,\n        orient: PropTypes.number.isRequired\n      }\n      )\n    )\n  ).isRequired,\n  size: PropTypes.number.isRequired\n}\n\n\nexport default Board","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Board from '../../components/Board/Board'\n\n//clockwise directions\nconst dirs = [\n  [0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1]\n]\n\nconst generateBoard = (size,colors) => {\n  var newBoard = new Array(size);\n  for (let i = 0; i < size; i++){\n    newBoard[i] = new Array(size);\n    for (let j = 0; j < size; j++){\n      newBoard[i][j] = {\n        color: 0, //Math.floor(Math.random()*(colors)),\n        orient: 0 //Math.floor(Math.random()*(2))     -- Diagonal points\n      }\n    }\n  }\n  let i = 0;\n  while (i < size*size || checkBoard(newBoard)){\n    let x = Math.floor(Math.random()*(size));\n    let y = Math.floor(Math.random()*(size));\n    recolorPoint(newBoard,colors,x,y,true);\n    i++;\n  }\n  return newBoard;\n}\nconst recolorPoint = (board, colors, gx, gy, positive) => {\n  const size = board[0].length\n  board[gx][gy].color = (board[gx][gy].color + (positive ? 1 : colors - 1)) % colors;\n  for (let i = 0; i < dirs.length; i++){\n    let x = gx, y = gy;\n    //0 - rook, 1 - bishop\n    if (i % 2 === board[gx][gy].orient % 2) {\n      while ((x + dirs[i][0] >= 0)  && (x + dirs[i][0] < size) && (y + dirs[i][1] >= 0)  && (y + dirs[i][1] < size)){\n        x += dirs[i][0];\n        y += dirs[i][1];\n        board[x][y].color = (board[x][y].color + (positive ? 1 : colors - 1)) % colors;\n      }\n    }\n  }\n  return board\n}\n\nconst checkBoard = (board) => {\n  const size = board[0].length\n  for (let i = 0; i < size; i++){\n    for (let j = 0; j < size; j++){\n      if (board[i][j].color !== board[0][0].color) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\nclass BoardContainer extends React.Component {\n  state = {\n    board: generateBoard(this.props.size,this.props.colors),\n    locked: true\n  }\n  handleClick = this.handleClick.bind(this);\n\n  shouldComponentUpdate(nextProps){\n    if (this.props.startTime !== nextProps.startTime || \n      nextProps.size !== this.props.size || \n      nextProps.colors !== this.props.colors){\n      this.setState({\n        board: generateBoard(nextProps.size,nextProps.colors),\n        locked: !nextProps.inProgress\n      })\n      return false\n    }\n    return true\n  }\n  componentDidUpdate(){\n    if (!this.state.locked){\n      if (checkBoard(this.state.board)){\n        this.props.finishGame();\n        this.setState({locked: true})\n      } \n    }\n  }\n\n  handleClick(x,y,positive){\n    if (!this.state.locked){\n      let board = [...this.state.board]\n      recolorPoint(board,this.props.colors, x,y,positive);\n      this.setState({board: board})\n    }\n  }\n   \n  render(){\n    return <Board\n      handleClick={this.handleClick}\n      board={this.state.board}\n      size={this.props.size}\n    />\n  }\n}\n\nBoardContainer.propTypes = {\n  finishGame: PropTypes.func.isRequired,\n  startTime: PropTypes.number.isRequired,\n  level: PropTypes.number.isRequired,\n  colors: PropTypes.number.isRequired,\n  size: PropTypes.number.isRequired,\n  inProgress: PropTypes.bool.isRequired\n}\n\n\nexport default BoardContainer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Timer.css'\n\nconst Timer = (props) => {\n  const t = props.timer;\n  var formattedTime = (t.h>0 ? t.h+'h ' : '') + \n  (t.m>0 ? t.m+'m ' : '') +\n  t.s + '.'+ t.ms + 's'\n\n  return (\n    <div className='container-fluid'>\n      <div className='timer'>\n        Time: {formattedTime}\n      </div>\n    </div>\n  )\n}\n\nTimer.propTypes = {\n  timer: PropTypes.shape({\n    h: PropTypes.number.isRequired,\n    m: PropTypes.number.isRequired,\n    s: PropTypes.number.isRequired,\n    ms: PropTypes.number.isRequired\n  }\n  ).isRequired\n}\n\nexport default Timer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Timer from '../../components/Timer/Timer'\n\nclass TimerContainer extends React.Component {\n  state = {\n    time: this.curTimer(),\n  }\n  curTimer(){\n    let t = Date.now() - this.props.start\n    let obj = {\n      h:  Math.floor(t / 3600000),\n      m:  Math.floor((t % 3600000) / 60000),\n      s:  Math.floor((t % 60000) / 1000),\n      ms: Math.floor((t % 1000)/100)\n    }\n    return obj\n  }\n  startTimer(){\n    this.timerID = setInterval(\n      () => this.tick(),\n      100\n    );\n  }\n  stopTimer(){\n    clearInterval(this.timerID)\n  }\n  componentDidMount(){\n    this.startTimer()\n  }\n  tick() {\n    this.setState({\n      time: this.curTimer()\n    });\n  }\n\n  shouldComponentUpdate(nextProps,nextState){\n    if (!nextProps.inProgress) {\n      this.stopTimer()\n    }\n    if (!this.props.inProgress && nextProps.inProgress){\n      this.startTimer()\n    }\n    return nextProps.inProgress\n  }\n  render(){\n    //console.log('render', this.state, this.props);\n    \n    return <Timer \n      timer={this.state.time}\n    />\n  }\n}\n\nTimerContainer.propTypes = {\n  start: PropTypes.number.isRequired,\n  inProgress: PropTypes.bool.isRequired\n}\n\nexport default TimerContainer","export const DEFAULT_SIZE = 3;\nexport const MAX_SIZE = 15;\nexport const DEFAULT_COLORS = 2;\nexport const MAX_COLORS = 3;\nexport const MAX_LEVEL = (MAX_COLORS - 1) * (MAX_SIZE - 2) + MAX_COLORS - 1 ;\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './Content.css';\r\nimport {MAX_LEVEL} from '../../Consts'\r\n\r\nconst Content = (props) =>\r\n{\r\n  const ruleTextEng = \r\n    <div>\r\n      Clicking on a square recolors all squares on it's horizontal and vertical lanes. Goal is to make all squares the same colored.\r\n      <br/>Click New Game to start.\r\n    </div>\r\n  const inputs = \r\n    <form>\r\n      <label>Level:</label>\r\n      <input className='nav-content__input' onChange={props.handleLevelChange} type=\"number\" name=\"level\" value={props.level} title={'1 - '+ MAX_LEVEL}/>\r\n      <input className='nav-content__input' onChange={props.handleLevelChange} type=\"range\" name=\"level\" min=\"1\" max={MAX_LEVEL} step=\"1\" value={props.level} title={'1 - '+ MAX_LEVEL}/>\r\n    </form>\r\n  const leaderboard = \r\n    <div className='leaderboard'>\r\n      placeholder\r\n    </div>\r\n  \r\n  return (  \r\n      (props.curCategory !== '') && \r\n      <div className='nav-content col-sm-12 col-md-3'>\r\n        {props.curCategory === 'nav1' && leaderboard}\r\n        {props.curCategory === 'nav2' && ruleTextEng}\r\n        {props.curCategory === 'nav3' && inputs}\r\n      </div>\r\n  )\r\n}\r\n\r\nContent.propTypes = {\r\n  handleLevelChange: PropTypes.func.isRequired,\r\n  curCategory: PropTypes.string.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Content","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Content from '../../components/Content/Content'\r\nimport {MAX_LEVEL} from '../../Consts'\r\n\r\nclass ContentContainer extends React.Component {\r\n  state = {\r\n    // leaderboard, rules, diff\r\n    curCategory: \"nav2\"\r\n  }\r\n  handleStart = this.handleStart.bind(this)\r\n  handleLevelChange = this.handleLevelChange.bind(this)\r\n  \r\n\r\n\r\n  shouldComponentUpdate(nextProps){\r\n    if (nextProps.curCategory !== this.state.curCategory) {\r\n      this.setState({\r\n        curCategory: nextProps.curCategory\r\n      })\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  getLeaderboard(){\r\n\r\n  }\r\n  updateLeaderboard(){\r\n\r\n  }\r\n  handleStart(){\r\n    this.props.startGame(this.props.level)\r\n  }\r\n\r\n  handleLevelChange(e){\r\n    const level = parseInt(e.target.value, 10)\r\n    if (isNaN(level)){\r\n      return\r\n    }\r\n    \r\n    if (level > 0 && level <= MAX_LEVEL){\r\n      this.props.changeLevel(level)\r\n    }\r\n  }\r\n  render(){\r\n    return <Content \r\n      handleLevelChange={this.handleLevelChange}\r\n      level={this.props.level}\r\n      curCategory={this.state.curCategory}\r\n    />\r\n  }\r\n}\r\n\r\nContentContainer.propTypes = {\r\n  changeLevel: PropTypes.func.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  curCategory: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ContentContainer","import React from 'react';\nimport './App.css';\nimport NavContainer from './containers/Nav/Nav';\nimport BoardContainer from './containers/Board/Board';\nimport TimerContainer from './containers/Timer/Timer'\nimport ContentContainer from './containers/Content/Content'\nimport {DEFAULT_SIZE,DEFAULT_COLORS,MAX_COLORS,MAX_SIZE} from './Consts'\n\n\nclass App extends React.Component {\n  state = {\n    level: (DEFAULT_COLORS - 2) * DEFAULT_SIZE + DEFAULT_COLORS - 1, \n    size: DEFAULT_SIZE,\n    colors: DEFAULT_COLORS,\n    inProgress: false,\n    curCategory: \"nav2\",\n    startTime: Date.now()\n  }\n  startGame = this.startGame.bind(this)\n  finishGame = this.finishGame.bind(this)\n  changeLevel = this.changeLevel.bind(this)\n  changeCategory = this.changeCategory.bind(this)\n\n  changeLevel(level){\n    this.setState({\n      level: level,\n      size: Math.floor((level-1) / (MAX_COLORS - 1)) + 3,\n      colors: (level-1) % (MAX_COLORS - 1) + 2,\n      startTime: Date.now(),\n      inProgress: false\n    })\n  }\n  changeCategory(cat){\n    this.setState({\n      curCategory: cat\n    })\n  }\n  startGame(){\n    this.setState({\n      inProgress: true,\n      startTime: Date.now()\n    })\n  }\n  finishGame(){\n    this.setState({inProgress: false})\n  }\n\n  render(){\n    console.log(typeof(this.state.level),this.state.level)\n    const size = this.state.size < MAX_SIZE ? this.state.size : MAX_SIZE\n    const colors = this.state.colors < MAX_COLORS ? this.state.colors : MAX_COLORS\n    return (\n    <div className=\"App\">\n      <NavContainer\n        startGame={this.startGame}\n        changeCategory={this.changeCategory}\n        level={this.state.level}\n        curCategory={this.state.curCategory}\n      />\n      <TimerContainer \n        start={this.state.startTime}\n        inProgress={this.state.inProgress}\n      />\n      <div className='content-container'>\n        <BoardContainer\n          finishGame={this.finishGame}\n          startTime={this.state.startTime}\n          colors={colors}\n          size={size}\n          level={this.state.level}\n          inProgress={this.state.inProgress}\n        />\n        <ContentContainer\n          changeLevel={this.changeLevel}\n          level={this.state.level}\n          curCategory={this.state.curCategory}\n        />\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}